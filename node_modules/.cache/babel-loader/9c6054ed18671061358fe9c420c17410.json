{"ast":null,"code":"const base64 = require('base-64');\n\nconst config = {\n  GITHUB_CLIENT_ID: 'e0b1671ff764de482212',\n  GITHUB_CLIENT_SECRET: '8f77dcfd6a807cff38ac558400c859f240806071'\n};\nconst AUTH_URL_PATH = 'https://api.github.com/authorizations';\nexport function login(name, pwd) {\n  const bytes = name.trim() + ':' + pwd.trim();\n  const encoded = base64.encode(bytes);\n  return fetch(AUTH_URL_PATH, {\n    method: 'POST',\n    headers: {\n      Authorization: 'Basic ' + encoded,\n      'User-Agent': 'GitHub Issue Browser',\n      'Content-Type': 'application/json; charset=utf-8',\n      Accept: 'application/vnd.github.inertia-preview+json'\n    },\n    body: JSON.stringify({\n      client_id: config.GITHUB_CLIENT_ID,\n      client_secret: config.GITHUB_CLIENT_SECRET,\n      scopes: ['user', 'repo'],\n      note: 'not abuse'\n    })\n  }).then(response => response.json().then(json => {\n    if (response.status < 400) {\n      return json.token;\n    } else {\n      throw new Error(json.message);\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/pedropbazzo/Downloads/react-apollo-graphql-github/src/githubLogin.js"],"names":["base64","require","config","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","AUTH_URL_PATH","login","name","pwd","bytes","trim","encoded","encode","fetch","method","headers","Authorization","Accept","body","JSON","stringify","client_id","client_secret","scopes","note","then","response","json","status","token","Error","message"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,gBAAgB,EAAE,sBADL;AAEbC,EAAAA,oBAAoB,EAAE;AAFT,CAAf;AAKA,MAAMC,aAAa,GAAG,uCAAtB;AAEA,OAAO,SAASC,KAAT,CAAgBC,IAAhB,EAAsBC,GAAtB,EAA2B;AAChC,QAAMC,KAAK,GAAGF,IAAI,CAACG,IAAL,KAAc,GAAd,GAAoBF,GAAG,CAACE,IAAJ,EAAlC;AACA,QAAMC,OAAO,GAAGX,MAAM,CAACY,MAAP,CAAcH,KAAd,CAAhB;AAEA,SAAOI,KAAK,CAACR,aAAD,EAAgB;AAC1BS,IAAAA,MAAM,EAAE,MADkB;AAE1BC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,WAAWL,OADnB;AAEP,oBAAc,sBAFP;AAGP,sBAAgB,iCAHT;AAIPM,MAAAA,MAAM,EAAE;AAJD,KAFiB;AAQ1BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,SAAS,EAAEnB,MAAM,CAACC,gBADC;AAEnBmB,MAAAA,aAAa,EAAEpB,MAAM,CAACE,oBAFH;AAGnBmB,MAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,CAHW;AAInBC,MAAAA,IAAI,EAAE;AAJa,KAAf;AARoB,GAAhB,CAAL,CAcJC,IAdI,CAcCC,QAAQ,IACdA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBE,IAAI,IAAI;AAC3B,QAAID,QAAQ,CAACE,MAAT,GAAkB,GAAtB,EAA2B;AACzB,aAAOD,IAAI,CAACE,KAAZ;AACD,KAFD,MAEO;AACL,YAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAf,CAAN;AACD;AACF,GAND,CAfK,CAAP;AAuBD","sourcesContent":["const base64 = require('base-64')\n\nconst config = {\n  GITHUB_CLIENT_ID: 'e0b1671ff764de482212',\n  GITHUB_CLIENT_SECRET: '8f77dcfd6a807cff38ac558400c859f240806071'\n}\n\nconst AUTH_URL_PATH = 'https://api.github.com/authorizations'\n\nexport function login (name, pwd) {\n  const bytes = name.trim() + ':' + pwd.trim()\n  const encoded = base64.encode(bytes)\n\n  return fetch(AUTH_URL_PATH, {\n    method: 'POST',\n    headers: {\n      Authorization: 'Basic ' + encoded,\n      'User-Agent': 'GitHub Issue Browser',\n      'Content-Type': 'application/json; charset=utf-8',\n      Accept: 'application/vnd.github.inertia-preview+json'\n    },\n    body: JSON.stringify({\n      client_id: config.GITHUB_CLIENT_ID,\n      client_secret: config.GITHUB_CLIENT_SECRET,\n      scopes: ['user', 'repo'],\n      note: 'not abuse'\n    })\n  }).then(response =>\n    response.json().then(json => {\n      if (response.status < 400) {\n        return json.token\n      } else {\n        throw new Error(json.message)\n      }\n    })\n  )\n}\n"]},"metadata":{},"sourceType":"module"}