{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/pedropbazzo/Downloads/react-apollo-graphql-github/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/pedropbazzo/Downloads/react-apollo-graphql-github/src/repository.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query GetRepositoryIssues($name: String!, $login: String!) {\\n    repositoryOwner(login: $login) {\\n      repository(name: $name) {\\n        stargazers {\\n          totalCount\\n        }\\n        watchers {\\n          totalCount\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\n// React\nimport React from 'react'; // GraphQL\n\nimport gql from 'graphql-tag';\nimport { graphql } from 'react-apollo';\nconst GetRepositoryInfoQuery = gql(_templateObject());\nconst withInfo = graphql(GetRepositoryInfoQuery, {\n  options: ({\n    login = \"facebook\",\n    name = \"react\"\n  }) => {\n    return {\n      variables: {\n        login,\n        name\n      }\n    };\n  },\n  props: ({\n    data\n  }) => {\n    // loading state\n    if (data.loading) {\n      return {\n        loading: true\n      };\n    } // error state\n\n\n    if (data.error) {\n      console.error(data.error);\n    } // OK state\n\n\n    return {\n      data\n    };\n  }\n}); // Repository\n\nclass Repository extends React.Component {\n  constructor(props) {\n    super(props); // states\n\n    this.state = {\n      login: props.login,\n      name: props.name,\n      stargazers: 0,\n      watchers: 0\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    // DRY\n    const repo = newProps.data.repositoryOwner.repository; // states\n\n    this.setState({\n      login: this.props.login,\n      name: this.props.name,\n      stargazers: repo.stargazers.totalCount,\n      watchers: repo.watchers.totalCount\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.login, \"/\", this.state.name), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"stargazers: \", this.state.stargazers.toLocaleString()), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"watchers: \", this.state.watchers.toLocaleString())));\n  }\n\n}\n\nconst RepositoryWithInfo = withInfo(Repository);\nexport default RepositoryWithInfo;","map":{"version":3,"sources":["/Users/pedropbazzo/Downloads/react-apollo-graphql-github/src/repository.js"],"names":["React","gql","graphql","GetRepositoryInfoQuery","withInfo","options","login","name","variables","props","data","loading","error","console","Repository","Component","constructor","state","stargazers","watchers","componentWillReceiveProps","newProps","repo","repositoryOwner","repository","setState","totalCount","render","toLocaleString","RepositoryWithInfo"],"mappings":";;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,MAAMC,sBAAsB,GAAGF,GAAH,mBAA5B;AAeA,MAAMG,QAAQ,GAAGF,OAAO,CAACC,sBAAD,EAAyB;AAC/CE,EAAAA,OAAO,EAAE,CAAC;AAAEC,IAAAA,KAAK,GAAG,UAAV;AAAuBC,IAAAA,IAAI,GAAG;AAA9B,GAAD,KAA6C;AACpD,WAAO;AACLC,MAAAA,SAAS,EAAE;AACTF,QAAAA,KADS;AAETC,QAAAA;AAFS;AADN,KAAP;AAMD,GAR8C;AAS/CE,EAAAA,KAAK,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AACnB;AACA,QAAIA,IAAI,CAACC,OAAT,EAAkB;AAChB,aAAO;AAAEA,QAAAA,OAAO,EAAE;AAAX,OAAP;AACD,KAJkB,CAMnB;;;AACA,QAAID,IAAI,CAACE,KAAT,EAAgB;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcF,IAAI,CAACE,KAAnB;AACD,KATkB,CAWnB;;;AACA,WAAO;AAAEF,MAAAA;AAAF,KAAP;AACD;AAtB8C,CAAzB,CAAxB,C,CAyBA;;AACA,MAAMI,UAAN,SAAyBd,KAAK,CAACe,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACP,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;;AACA,SAAKQ,KAAL,GAAa;AACXX,MAAAA,KAAK,EAAEG,KAAK,CAACH,KADF;AAEXC,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAFD;AAGXW,MAAAA,UAAU,EAAE,CAHD;AAIXC,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAMD;;AAEDC,EAAAA,yBAAyB,CAACC,QAAD,EAAW;AAClC;AACA,UAAMC,IAAI,GAAGD,QAAQ,CAACX,IAAT,CAAca,eAAd,CAA8BC,UAA3C,CAFkC,CAIlC;;AACA,SAAKC,QAAL,CAAc;AACZnB,MAAAA,KAAK,EAAE,KAAKG,KAAL,CAAWH,KADN;AAEZC,MAAAA,IAAI,EAAE,KAAKE,KAAL,CAAWF,IAFL;AAGZW,MAAAA,UAAU,EAAEI,IAAI,CAACJ,UAAL,CAAgBQ,UAHhB;AAIZP,MAAAA,QAAQ,EAAEG,IAAI,CAACH,QAAL,CAAcO;AAJZ,KAAd;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKV,KAAL,CAAWX,KAAhB,OAAwB,KAAKW,KAAL,CAAWV,IAAnC,CADM,EAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiB,KAAKU,KAAL,CAAWC,UAAX,CAAsBU,cAAtB,EAAjB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe,KAAKX,KAAL,CAAWE,QAAX,CAAoBS,cAApB,EAAf,CAFF,CAFM,CAAR;AAOD;;AAlCsC;;AAqCzC,MAAMC,kBAAkB,GAAGzB,QAAQ,CAACU,UAAD,CAAnC;AACA,eAAee,kBAAf","sourcesContent":["// React\nimport React from 'react';\n\n// GraphQL\nimport gql from 'graphql-tag';\nimport { graphql } from 'react-apollo';\n\nconst GetRepositoryInfoQuery = gql`\n  query GetRepositoryIssues($name: String!, $login: String!) {\n    repositoryOwner(login: $login) {\n      repository(name: $name) {\n        stargazers {\n          totalCount\n        }\n        watchers {\n          totalCount\n        }\n      }\n    }\n  }\n`;\n\nconst withInfo = graphql(GetRepositoryInfoQuery, {\n  options: ({ login = \"facebook\" , name = \"react\" }) => {\n    return {\n      variables: {\n        login,\n        name\n      }\n    }\n  },\n  props: ({ data }) => {\n    // loading state\n    if (data.loading) {\n      return { loading: true };\n    }\n\n    // error state\n    if (data.error) {\n      console.error(data.error);\n    }\n\n    // OK state\n    return { data };\n  },\n});\n\n// Repository\nclass Repository extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // states\n    this.state = {\n      login: props.login,\n      name: props.name,\n      stargazers: 0,\n      watchers: 0,\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    // DRY\n    const repo = newProps.data.repositoryOwner.repository;\n\n    // states\n    this.setState({\n      login: this.props.login,\n      name: this.props.name,\n      stargazers: repo.stargazers.totalCount,\n      watchers: repo.watchers.totalCount\n    });\n  }\n\n  render() {\n    return (<div>\n      <h2>{this.state.login}/{this.state.name}</h2>\n      <ul>\n        <li>stargazers: {this.state.stargazers.toLocaleString()}</li>\n        <li>watchers: {this.state.watchers.toLocaleString()}</li>\n      </ul>\n    </div>)\n  }\n}\n\nconst RepositoryWithInfo = withInfo(Repository);\nexport default RepositoryWithInfo;\n"]},"metadata":{},"sourceType":"module"}